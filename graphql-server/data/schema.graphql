type Cliente {
    id: ID
    nombre: String
    edad: Int
    apellido: String
    empresa: String
    emails: [Email]!
    tipo: TipoCliente
    pedidos: [Pedido]
}
enum TipoCliente {
    BASICO
    PREMIUM
}
type Pedido {
    nombre: String
    precio: Int
}
type Email {
    email: String!
}
""" Queries para cliente """
type Query {
    """ Obtengo todos los clientes """
    getClientes(limite: Int, offset: Int): [Cliente],
    getCliente(id: String): Cliente,
    totalClientes: Int
}
input PedidoInput {
    nombre: String!
    precio: Int!
}
input EmailInput {
    email: String!
}
""" Campos para cliente """
input ClienteInput {
    id: ID
    nombre: String!
    edad: Int
    apellido: String!
    empresa: String!
    emails: [EmailInput]!
    tipo: TipoCliente!
    pedidos: [PedidoInput]
}
""" Mutuations de la app """    
type Mutation {
    """ Mutuation para crear cliente """
    crearCliente(input: ClienteInput): Cliente,
    """ Mutuation para actualizar cliente """
    actualizarCliente(input: ClienteInput): Cliente,
    """ Mutuation para borrar cliente """
    borrarCliente(id: ID): String
}